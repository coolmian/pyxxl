{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"xxl-jobs \u7684python\u5ba2\u6237\u7aef\u5b9e\u73b0 \u4f7f\u7528pyxxl\u53ef\u4ee5\u65b9\u4fbf\u7684\u628aPython\u5199\u7684\u65b9\u6cd5\u6ce8\u518c\u5230xxl-job\u4e2d,\u4f7f\u7528xxl-job-admin\u7ba1\u7406Python\u5b9a\u65f6\u4efb\u52a1\u548c\u5468\u671f\u4efb\u52a1 \u5df2\u7ecf\u652f\u6301\u7684\u529f\u80fd \u6267\u884c\u5668\u6ce8\u518c\u5230job-admin task\u6ce8\u518c\uff0c\u7c7b\u4f3c\u4e8eflask\u8def\u7531\u88c5\u9970\u5668\u7684\u7528\u6cd5 \u4efb\u52a1\u7684\u7ba1\u7406\uff08\u652f\u6301\u5728\u754c\u9762\u4e0a\u53d6\u6d88\uff0c\u53d1\u8d77\u7b49\u64cd\u4f5c\uff0c\u4efb\u52a1\u5b8c\u6210\u540e\u4f1a\u56de\u8c03admin\uff09 \u6240\u6709\u963b\u585e\u7b56\u7565\u7684\u652f\u6301 \u5f02\u6b65\u652f\u6301\uff08\u63a8\u8350\uff09 \u5f85\u5b9e\u73b0 [x] \u81ea\u5b9a\u4e49\u65e5\u5fd7 \u548c \u754c\u9762\u4e0a\u67e5\u770b\u65e5\u5fd7 \u5982\u4f55\u4f7f\u7528 pip install pyxxl import asyncio from pyxxl import ExecutorConfig , PyxxlRunner config = ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" , ) app = PyxxlRunner ( config ) @app . handler . register ( name = \"demoJobHandler\" ) async def test_task (): await asyncio . sleep ( 5 ) return \"\u6210\u529f...\" # \u5982\u679c\u4f60\u4ee3\u7801\u91cc\u9762\u6ca1\u6709\u5b9e\u73b0\u5168\u5f02\u6b65\uff0c\u8bf7\u4f7f\u7528\u540c\u6b65\u51fd\u6570\uff0c\u4e0d\u7136\u4f1a\u963b\u585e\u5176\u4ed6\u4efb\u52a1 @app . handler . register ( name = \"xxxxx\" ) def test_task3 (): return \"\u6210\u529f3\" app . run_executor () \u66f4\u591a\u793a\u4f8b\u548c\u63a5\u53e3\u6587\u6863\u8bf7\u53c2\u8003 PYXXL\u6587\u6863 \uff0c\u5177\u4f53\u4ee3\u7801\u5728example\u6587\u4ef6\u5939\u4e0b\u9762 \u5f00\u53d1\u4eba\u5458 \u4e0b\u9762\u662f\u5f00\u53d1\u4eba\u5458\u5982\u4f55\u5feb\u6377\u7684\u642d\u5efa\u5f00\u53d1\u8c03\u8bd5\u73af\u5883 \u542f\u52a8xxl\u7684\u8c03\u5ea6\u4e2d\u5fc3 ./init_dev_env.sh \u542f\u52a8\u6267\u884c\u5668 poetry install # \u4fee\u6539app.py\u4e2d\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f,\u7136\u540e\u542f\u52a8 poetry run python example/app.py","title":"Index"},{"location":"#xxl-jobs-python","text":"\u4f7f\u7528pyxxl\u53ef\u4ee5\u65b9\u4fbf\u7684\u628aPython\u5199\u7684\u65b9\u6cd5\u6ce8\u518c\u5230xxl-job\u4e2d,\u4f7f\u7528xxl-job-admin\u7ba1\u7406Python\u5b9a\u65f6\u4efb\u52a1\u548c\u5468\u671f\u4efb\u52a1","title":"xxl-jobs \u7684python\u5ba2\u6237\u7aef\u5b9e\u73b0"},{"location":"#_1","text":"\u6267\u884c\u5668\u6ce8\u518c\u5230job-admin task\u6ce8\u518c\uff0c\u7c7b\u4f3c\u4e8eflask\u8def\u7531\u88c5\u9970\u5668\u7684\u7528\u6cd5 \u4efb\u52a1\u7684\u7ba1\u7406\uff08\u652f\u6301\u5728\u754c\u9762\u4e0a\u53d6\u6d88\uff0c\u53d1\u8d77\u7b49\u64cd\u4f5c\uff0c\u4efb\u52a1\u5b8c\u6210\u540e\u4f1a\u56de\u8c03admin\uff09 \u6240\u6709\u963b\u585e\u7b56\u7565\u7684\u652f\u6301 \u5f02\u6b65\u652f\u6301\uff08\u63a8\u8350\uff09","title":"\u5df2\u7ecf\u652f\u6301\u7684\u529f\u80fd"},{"location":"#_2","text":"[x] \u81ea\u5b9a\u4e49\u65e5\u5fd7 \u548c \u754c\u9762\u4e0a\u67e5\u770b\u65e5\u5fd7","title":"\u5f85\u5b9e\u73b0"},{"location":"#_3","text":"pip install pyxxl import asyncio from pyxxl import ExecutorConfig , PyxxlRunner config = ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" , ) app = PyxxlRunner ( config ) @app . handler . register ( name = \"demoJobHandler\" ) async def test_task (): await asyncio . sleep ( 5 ) return \"\u6210\u529f...\" # \u5982\u679c\u4f60\u4ee3\u7801\u91cc\u9762\u6ca1\u6709\u5b9e\u73b0\u5168\u5f02\u6b65\uff0c\u8bf7\u4f7f\u7528\u540c\u6b65\u51fd\u6570\uff0c\u4e0d\u7136\u4f1a\u963b\u585e\u5176\u4ed6\u4efb\u52a1 @app . handler . register ( name = \"xxxxx\" ) def test_task3 (): return \"\u6210\u529f3\" app . run_executor () \u66f4\u591a\u793a\u4f8b\u548c\u63a5\u53e3\u6587\u6863\u8bf7\u53c2\u8003 PYXXL\u6587\u6863 \uff0c\u5177\u4f53\u4ee3\u7801\u5728example\u6587\u4ef6\u5939\u4e0b\u9762","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"#_4","text":"\u4e0b\u9762\u662f\u5f00\u53d1\u4eba\u5458\u5982\u4f55\u5feb\u6377\u7684\u642d\u5efa\u5f00\u53d1\u8c03\u8bd5\u73af\u5883","title":"\u5f00\u53d1\u4eba\u5458"},{"location":"#xxl","text":"./init_dev_env.sh","title":"\u542f\u52a8xxl\u7684\u8c03\u5ea6\u4e2d\u5fc3"},{"location":"#_5","text":"poetry install # \u4fee\u6539app.py\u4e2d\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f,\u7136\u540e\u542f\u52a8 poetry run python example/app.py","title":"\u542f\u52a8\u6267\u884c\u5668"},{"location":"changelog/","text":"0.1.7 \u4f18\u5316\u9519\u8bef\u4fe1\u606f \u652f\u6301\u81ea\u5b9a\u4e49\u6267\u884c\u5668\u53c2\u6570 \u652f\u6301executorTimeout","title":"Changelog"},{"location":"changelog/#017","text":"\u4f18\u5316\u9519\u8bef\u4fe1\u606f \u652f\u6301\u81ea\u5b9a\u4e49\u6267\u884c\u5668\u53c2\u6570 \u652f\u6301executorTimeout","title":"0.1.7"},{"location":"example/","text":"Example For full examples see github . App import asyncio import logging import time from pyxxl import ExecutorConfig , PyxxlRunner from pyxxl.ctx import g from pyxxl.utils import setup_logging setup_logging ( logging . DEBUG ) config = ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" , ) app = PyxxlRunner ( config ) @app . handler . register ( name = \"demoJobHandler\" ) async def test_task (): # you can get task params with \"g\" print ( \"get executor params: %s \" % g . xxl_run_data . executorParams ) await asyncio . sleep ( 5 ) return \"\u6210\u529f...\" @app . handler . register ( name = \"xxxxx\" ) async def test_task3 (): await asyncio . sleep ( 3 ) return \"\u6210\u529f3\" @app . handler . register ( name = \"sync_func\" ) def test_task4 (): time . sleep ( 3 ) return \"\u6210\u529f3\" app . run_executor () Gunicorn Runserver app.py import asyncio import logging from fastapi import FastAPI from pyxxl import JobHandler from pyxxl.utils import setup_logging setup_logging ( logging . DEBUG ) app = FastAPI () xxl_handler = JobHandler () @app . get ( \"/\" ) async def root (): return { \"message\" : \"Hello World\" } @xxl_handler . register ( name = \"demoJobHandler\" ) async def test_task (): await asyncio . sleep ( 10 ) return \"\u6210\u529f10\" gunicorn.conf.py import atexit from multiprocessing.util import _exit_function from pyxxl import ExecutorConfig , PyxxlRunner bind = [ \"0.0.0.0:8000\" ] backlog = 512 workers = 1 timeout = 300 graceful_timeout = 2 limit_request_field_size = 8192 def when_ready ( server ): # pylint: disable=import-outside-toplevel,unused-import,no-name-in-module from app import xxl_handler atexit . unregister ( _exit_function ) config = ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" , ) runner = PyxxlRunner ( config , handler = xxl_handler ) server . pyxxl_runner = runner runner . run_with_daemon ()","title":"Example"},{"location":"example/#example","text":"For full examples see github .","title":"Example"},{"location":"example/#app","text":"import asyncio import logging import time from pyxxl import ExecutorConfig , PyxxlRunner from pyxxl.ctx import g from pyxxl.utils import setup_logging setup_logging ( logging . DEBUG ) config = ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" , ) app = PyxxlRunner ( config ) @app . handler . register ( name = \"demoJobHandler\" ) async def test_task (): # you can get task params with \"g\" print ( \"get executor params: %s \" % g . xxl_run_data . executorParams ) await asyncio . sleep ( 5 ) return \"\u6210\u529f...\" @app . handler . register ( name = \"xxxxx\" ) async def test_task3 (): await asyncio . sleep ( 3 ) return \"\u6210\u529f3\" @app . handler . register ( name = \"sync_func\" ) def test_task4 (): time . sleep ( 3 ) return \"\u6210\u529f3\" app . run_executor ()","title":"App"},{"location":"example/#gunicorn-runserver","text":"app.py import asyncio import logging from fastapi import FastAPI from pyxxl import JobHandler from pyxxl.utils import setup_logging setup_logging ( logging . DEBUG ) app = FastAPI () xxl_handler = JobHandler () @app . get ( \"/\" ) async def root (): return { \"message\" : \"Hello World\" } @xxl_handler . register ( name = \"demoJobHandler\" ) async def test_task (): await asyncio . sleep ( 10 ) return \"\u6210\u529f10\" gunicorn.conf.py import atexit from multiprocessing.util import _exit_function from pyxxl import ExecutorConfig , PyxxlRunner bind = [ \"0.0.0.0:8000\" ] backlog = 512 workers = 1 timeout = 300 graceful_timeout = 2 limit_request_field_size = 8192 def when_ready ( server ): # pylint: disable=import-outside-toplevel,unused-import,no-name-in-module from app import xxl_handler atexit . unregister ( _exit_function ) config = ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" , ) runner = PyxxlRunner ( config , handler = xxl_handler ) server . pyxxl_runner = runner runner . run_with_daemon ()","title":"Gunicorn Runserver"},{"location":"apis/config/","text":"ExecutorConfig \u5982\u679c\u5b89\u88c5\u4e86python-dotenv,\u652f\u6301\u4ece.env\u6587\u4ef6\u52a0\u8f7d\u914d\u7f6e\u9879 Warning \u4f1a\u4ece\u73af\u5883\u53d8\u91cf\u8986\u76d6\u914d\u7f6e\uff0c\u5217\u5982access_token\u53c2\u6570 \u4f18\u5148\u7ea7\u4e3a: \u73af\u5883\u53d8\u91cfaccess_token > \u73af\u5883\u53d8\u91cfACCESS_TOKEN > ExecutorConfig().access_token access_token : Optional [ str ] = None class-attribute \u8c03\u5ea6\u5668\u7684token. Default: None dotenv_path : Optional [ str ] = None class-attribute .env\u6587\u4ef6\u7684\u8def\u5f84,\u9ed8\u8ba4\u4e3a\u5f53\u524d\u8def\u5f84\u4e0b\u7684.env\u6587\u4ef6. executor_app_name : str class-attribute xxl-admin\u4e0a\u5b9a\u4e49\u7684\u6267\u884c\u5668\u540d\u79f0,\u5fc5\u987b\u4e00\u81f4\u5426\u5219\u65e0\u6cd5\u6ce8\u518c(\u5982xxl-job-executor-sample). \u5fc5\u586b executor_host : str = field ( default_factory = get_network_ip ) class-attribute \u6267\u884c\u5668\u7ed1\u5b9a\u7684host,xxl-admin\u901a\u8fc7\u8fd9\u4e2ahost\u6765\u56de\u8c03pyxxl\u6267\u884c\u5668,\u5982\u679c\u4e0d\u586b\u4f1a\u9ed8\u8ba4\u53d6\u7b2c\u4e00\u4e2a\u7f51\u5361\u7684\u5730\u5740. Default: \u83b7\u53d6\u5230\u7b2c\u4e00\u4e2a\u7f51\u5361\u7684ip\u5730\u5740 executor_port : int = 9999 class-attribute \u6267\u884c\u5668\u7ed1\u5b9a\u7684http\u670d\u52a1\u7684\u7aef\u53e3,\u4f5c\u7528\u540chost. Default: 9999 graceful_close : bool = False class-attribute \u662f\u5426\u4f18\u96c5\u5173\u95ed. Default: True graceful_timeout : int = 60 * 5 class-attribute \u4f18\u96c5\u5173\u95ed\u7684\u7b49\u5f85\u65f6\u95f4,\u8d85\u8fc7\u6539\u65f6\u95f4\u5f3a\u5236\u505c\u6b62\u4efb\u52a1. Default: 60 * 5 max_workers : int = 30 class-attribute \u6267\u884c\u5668\u7ebf\u7a0b\u6c60\uff08\u6267\u884c\u540c\u6b65\u4efb\u52a1\u65f6\u4f7f\u7528\uff09. Default: 30 task_queue_length : int = 30 class-attribute \u4efb\u52a1\u7684\u961f\u5217\u957f\u5ea6.\u5355\u673a\u4e32\u884c\u7684\u961f\u5217\u957f\u5ea6,\u5f53\u963b\u585e\u7684\u4efb\u52a1\u5927\u4e8e\u6b64\u503c\u65f6\u4f1a\u629b\u5f03. Default: 30 task_timeout : int = 60 * 10 class-attribute \u4efb\u52a1\u7684\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4,\u5982\u679c\u8c03\u5ea6\u5668\u4f20\u4e86\u4ee5\u53c2\u6570executorTimeout\u4e3a\u51c6. Default: 60 * 10 xxl_admin_baseurl : str class-attribute xxl-admin\u670d\u52a1\u7aef\u66b4\u9732\u7684restful\u63a5\u53e3url(\u5982http://localhost:8080/xxl-job-admin/api/). \u5fc5\u586b","title":"ExecutorConfig"},{"location":"apis/config/#executorconfig","text":"\u5982\u679c\u5b89\u88c5\u4e86python-dotenv,\u652f\u6301\u4ece.env\u6587\u4ef6\u52a0\u8f7d\u914d\u7f6e\u9879 Warning \u4f1a\u4ece\u73af\u5883\u53d8\u91cf\u8986\u76d6\u914d\u7f6e\uff0c\u5217\u5982access_token\u53c2\u6570 \u4f18\u5148\u7ea7\u4e3a: \u73af\u5883\u53d8\u91cfaccess_token > \u73af\u5883\u53d8\u91cfACCESS_TOKEN > ExecutorConfig().access_token","title":"ExecutorConfig"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.access_token","text":"\u8c03\u5ea6\u5668\u7684token. Default: None","title":"access_token"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.dotenv_path","text":".env\u6587\u4ef6\u7684\u8def\u5f84,\u9ed8\u8ba4\u4e3a\u5f53\u524d\u8def\u5f84\u4e0b\u7684.env\u6587\u4ef6.","title":"dotenv_path"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.executor_app_name","text":"xxl-admin\u4e0a\u5b9a\u4e49\u7684\u6267\u884c\u5668\u540d\u79f0,\u5fc5\u987b\u4e00\u81f4\u5426\u5219\u65e0\u6cd5\u6ce8\u518c(\u5982xxl-job-executor-sample). \u5fc5\u586b","title":"executor_app_name"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.executor_host","text":"\u6267\u884c\u5668\u7ed1\u5b9a\u7684host,xxl-admin\u901a\u8fc7\u8fd9\u4e2ahost\u6765\u56de\u8c03pyxxl\u6267\u884c\u5668,\u5982\u679c\u4e0d\u586b\u4f1a\u9ed8\u8ba4\u53d6\u7b2c\u4e00\u4e2a\u7f51\u5361\u7684\u5730\u5740. Default: \u83b7\u53d6\u5230\u7b2c\u4e00\u4e2a\u7f51\u5361\u7684ip\u5730\u5740","title":"executor_host"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.executor_port","text":"\u6267\u884c\u5668\u7ed1\u5b9a\u7684http\u670d\u52a1\u7684\u7aef\u53e3,\u4f5c\u7528\u540chost. Default: 9999","title":"executor_port"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.graceful_close","text":"\u662f\u5426\u4f18\u96c5\u5173\u95ed. Default: True","title":"graceful_close"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.graceful_timeout","text":"\u4f18\u96c5\u5173\u95ed\u7684\u7b49\u5f85\u65f6\u95f4,\u8d85\u8fc7\u6539\u65f6\u95f4\u5f3a\u5236\u505c\u6b62\u4efb\u52a1. Default: 60 * 5","title":"graceful_timeout"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.max_workers","text":"\u6267\u884c\u5668\u7ebf\u7a0b\u6c60\uff08\u6267\u884c\u540c\u6b65\u4efb\u52a1\u65f6\u4f7f\u7528\uff09. Default: 30","title":"max_workers"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.task_queue_length","text":"\u4efb\u52a1\u7684\u961f\u5217\u957f\u5ea6.\u5355\u673a\u4e32\u884c\u7684\u961f\u5217\u957f\u5ea6,\u5f53\u963b\u585e\u7684\u4efb\u52a1\u5927\u4e8e\u6b64\u503c\u65f6\u4f1a\u629b\u5f03. Default: 30","title":"task_queue_length"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.task_timeout","text":"\u4efb\u52a1\u7684\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4,\u5982\u679c\u8c03\u5ea6\u5668\u4f20\u4e86\u4ee5\u53c2\u6570executorTimeout\u4e3a\u51c6. Default: 60 * 10","title":"task_timeout"},{"location":"apis/config/#pyxxl.setting.ExecutorConfig.xxl_admin_baseurl","text":"xxl-admin\u670d\u52a1\u7aef\u66b4\u9732\u7684restful\u63a5\u53e3url(\u5982http://localhost:8080/xxl-job-admin/api/). \u5fc5\u586b","title":"xxl_admin_baseurl"},{"location":"apis/executor/","text":"Executor \u6267\u884c\u5668\uff0c\u771f\u6b63\u7684\u8c03\u5ea6\u4efb\u52a1\u548c\u7b56\u7565\u90fd\u5728\u8fd9\u91cc Parameters: Name Type Description Default xxl_client XXL xxl\u5ba2\u6237\u7aef required config ExecutorConfig \u914d\u7f6e\u53c2\u6570 required handler Optional [ JobHandler ] Defaults to None. None loop Optional [ asyncio . AbstractEventLoop ] Defaults to None. None graceful_close ( timeout : int = 60 ) -> None async \u4f18\u96c5\u5173\u95ed","title":"Executor"},{"location":"apis/executor/#executor","text":"\u6267\u884c\u5668\uff0c\u771f\u6b63\u7684\u8c03\u5ea6\u4efb\u52a1\u548c\u7b56\u7565\u90fd\u5728\u8fd9\u91cc Parameters: Name Type Description Default xxl_client XXL xxl\u5ba2\u6237\u7aef required config ExecutorConfig \u914d\u7f6e\u53c2\u6570 required handler Optional [ JobHandler ] Defaults to None. None loop Optional [ asyncio . AbstractEventLoop ] Defaults to None. None","title":"Executor"},{"location":"apis/executor/#pyxxl.executor.Executor.graceful_close","text":"\u4f18\u96c5\u5173\u95ed","title":"graceful_close()"},{"location":"apis/run_data/","text":"RunData \u8c03\u5ea6\u5668\u4f20\u5165\u7684\u6240\u6709\u53c2\u6570\uff0c\u6267\u884c\u51fd\u6570\u901a\u8fc7g\u6765\u83b7\u53d6\u8fd9\u4e9b\u53c2\u6570 Example from pyxxl.ctx import g @xxxxx async def test (): print ( g . xxl_run_data . logId )","title":"RunData"},{"location":"apis/run_data/#rundata","text":"\u8c03\u5ea6\u5668\u4f20\u5165\u7684\u6240\u6709\u53c2\u6570\uff0c\u6267\u884c\u51fd\u6570\u901a\u8fc7g\u6765\u83b7\u53d6\u8fd9\u4e9b\u53c2\u6570 Example from pyxxl.ctx import g @xxxxx async def test (): print ( g . xxl_run_data . logId )","title":"RunData"},{"location":"apis/runner/","text":"PyxxlRunner Example runner = PyxxlRunner ( ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" ) , handler = xxl_handler , ) Parameters: Name Type Description Default config ExecutorConfig \u914d\u7f6e\u53c2\u6570 ExecutorConfig required handler JobHandler \u6267\u884c\u5668\u652f\u6301\u7684job,\u6ca1\u6709\u9884\u5148\u5b9a\u4e49\u7684job\u540d\u79f0\u4e5f\u4f1a\u6267\u884c\u5931\u8d25 None create_server_app () -> web . Application \u83b7\u53d6\u6267\u884c\u5668\u7684app\u5bf9\u8c61,\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u559c\u6b22\u7684\u670d\u52a1\u5668\u542f\u52a8\u8fd9\u4e2awebapp run_executor ( handle_signals : bool = True ) -> None \u7528aiohttp\u7684web\u670d\u52a1\u5668\u542f\u52a8\u6267\u884c\u5668 run_with_daemon () -> None \u65b0\u5f00\u4e00\u4e2a\u8fdb\u7a0b\u4ee5\u540e\u53f0\u65b9\u5f0f\u8fd0\u884c,\u4e00\u822c\u548cgunicorn\u4e00\u8d77\u4f7f\u7528","title":"PyxxlRunner"},{"location":"apis/runner/#pyxxlrunner","text":"Example runner = PyxxlRunner ( ExecutorConfig ( xxl_admin_baseurl = \"http://localhost:8080/xxl-job-admin/api/\" , executor_app_name = \"xxl-job-executor-sample\" , executor_host = \"172.17.0.1\" ) , handler = xxl_handler , ) Parameters: Name Type Description Default config ExecutorConfig \u914d\u7f6e\u53c2\u6570 ExecutorConfig required handler JobHandler \u6267\u884c\u5668\u652f\u6301\u7684job,\u6ca1\u6709\u9884\u5148\u5b9a\u4e49\u7684job\u540d\u79f0\u4e5f\u4f1a\u6267\u884c\u5931\u8d25 None","title":"PyxxlRunner"},{"location":"apis/runner/#pyxxl.main.PyxxlRunner.create_server_app","text":"\u83b7\u53d6\u6267\u884c\u5668\u7684app\u5bf9\u8c61,\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u559c\u6b22\u7684\u670d\u52a1\u5668\u542f\u52a8\u8fd9\u4e2awebapp","title":"create_server_app()"},{"location":"apis/runner/#pyxxl.main.PyxxlRunner.run_executor","text":"\u7528aiohttp\u7684web\u670d\u52a1\u5668\u542f\u52a8\u6267\u884c\u5668","title":"run_executor()"},{"location":"apis/runner/#pyxxl.main.PyxxlRunner.run_with_daemon","text":"\u65b0\u5f00\u4e00\u4e2a\u8fdb\u7a0b\u4ee5\u540e\u53f0\u65b9\u5f0f\u8fd0\u884c,\u4e00\u822c\u548cgunicorn\u4e00\u8d77\u4f7f\u7528","title":"run_with_daemon()"}]}